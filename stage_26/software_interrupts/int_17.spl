//Login System Call

alias return_addr R0;
alias userSP R1;
alias username R2;
alias password R3;
alias sys_call_no R4;
alias userid R5;
alias i R6;

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 13]=SP;			//UPTR=SP
userSP = SP;

SP=[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 11]*512 - 1;		//SP=USERAREA PAGE

sys_call_no=[[PTBR+2*((userSP-5)/512)]*512 + (userSP-5)%512];		//sys_call_no
username=[[PTBR+2*((userSP-4)/512)]*512 + (userSP-4)%512];
password=[[PTBR+2*((userSP-3)/512)]*512 + (userSP-3)%512];
return_addr=[PTBR+2*((userSP-1)/512)]*512 + (userSP-1)%512;

if(sys_call_no==27)
then
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9]=27;
	
	if([SYSTEM_STATUS_TABLE+1]!=1)                                  //If not Login(INIT) Process
	then
		[return_addr]=-2;
		[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9]=0;			//MODE FLAG BIT=0;
		SP=[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 13];			//SP=UPTR
		ireturn;
	endif;

   
	i=0;

	while(i<MAX_USER_NUM)
	do
		if([USER_TABLE + 2*i]==username)
		then
			userid=i;
			break;
		endif;

		i=i+1;
	endwhile;

	if(i==MAX_USER_NUM)
	then
		[return_addr]=-1;
		[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9]=0;			//MODE FLAG BIT=0;
		SP=[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 13];			//SP=UPTR
		ireturn;
	endif;

	encrypt password ;                                         //Encrypted Password         //To Encrypt the password;

	if(password!=[USER_TABLE + 2*i + 1])								//If user input password is wrong/right
	then
		[return_addr]=-1;
		[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9]=0;			//MODE FLAG BIT=0;
		SP=[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 13];			//SP=UPTR
		ireturn;
	endif;

	[PROCESS_TABLE + 2*16 + 4]=CREATED;     //State(SHELL PROCES)=CREATED;
	[PROCESS_TABLE + 2*16 + 3]=userid;     //Userid(SHELL PROCESS)=LOGGED IN USER ID;
	
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 4]=WAIT_PROCESS;     //LOGIN PROCESS WAITS FOR SHELL PROCESS TO FINISH
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 5]=2;    	

	[SYSTEM_STATUS_TABLE+0]=userid;			//CURRENT USER ID=userid;

	[return_addr]=0;
	
	multipush(R0,R1,R2,R3,R4,R5,R6);
	call SCHEDULER;								//SCHEDULER MODULE;
	multipop(R0,R1,R2,R3,R4,R5,R6);
endif;


[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9]=0;			//MODE FLAG BIT=0;
SP=[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 13];			//SP=UPTR

ireturn;